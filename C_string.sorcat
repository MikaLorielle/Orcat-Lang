// ─── “builder” functions that just return/consume a string ────────────
pub extern fn sb_create()                   <string>;
pub extern fn sb_append_str(string b, string s)   <string>;
pub extern fn sb_append_int(string b, int x)      <string>;
pub extern fn sb_append_float(string b, float f)  <string>;
pub extern fn sb_append_bool(string b, bool bb)   <string>;
pub extern fn sb_finish(string b)            <string>;
// ─── “builder” functions that just return/consume a string ────────────

// ─── to_string functions ───────────────────────────────────────────────
pub extern fn istr(int i)    <string>;
pub extern fn i8str(int8 i)    <string>;
pub extern fn i16str(int16 i)    <string>;
pub extern fn i32str(int32 i)    <string>;
pub extern fn i64str(int64 i)    <string>;
pub extern fn fstr(float f)<string>;
pub extern fn bstr(bool b)  <string>;
pub extern fn str(string s)<string>;
// ─── to_string functions ───────────────────────────────────────────────

// ─── String Builder example ────────────────────────────────────────────────
    /*
    string builder = sb_create();
    builder = sb_append_str(builder, tostr("Hello, "));
    builder = sb_append_str(builder, tostr("Orcat!  Number="));
    builder = sb_append_int(builder, 42);
    builder = sb_append_str(builder, tostr(", Pi="));
    builder = sb_append_float(builder, 3.14159);
    builder = sb_append_str(builder, tostr(", flag="));
    builder = sb_append_bool(builder, false);

    // Now finish and print (we add a newline)
    string result = sb_finish(builder);
    print(result);
    print("\n");
// ─── String Builder example ────────────────────────────────────────────────
*/
